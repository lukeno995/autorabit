//Generated by wsdl2apex

public class OF_WS_OM_ActivationNew {
    public class PortTypeEndpoint3 {
		List<OF_Puntamento_Callout__c> listCustomSett =  OF_Puntamento_Callout__c.getAll().values();
    	String puntamento=listCustomSett[0].Tibco_Collaudo__c;
        //public String endpoint_x = 'http://localhost:6940/New_SF_OM/ActivationSetup';
		public String endpoint_x = 'https://'+puntamento+'/New_SF_OM/ActivationSetup';
		//public String endpoint_x = 'https://ofs-test-ws.enel.com:44300/New_SF_OM/ActivationSetup';

        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://openfiber.it/schemas/New_SF_OM/ActivationSetup.xsd', 'OF_WS_OM_Schema_Req_ActivationNew', 'http://xmlns.example.com/1541610375851', 'OF_WS_OM_ActivationNew', 'http://openfiber.it/schemas/New_SF_OM/Esito.xsd', 'OF_WS_OM_Schema_Res_ActivationNew'};
        
        public OF_WS_OM_Schema_Res_ActivationNew.Esito_element ActivationSetup(List<EOF_EAI_Service_Log__c> sList) {
            //AA - Aggiunto controllo per null pointer 
			//try{
			if(!OF_SA_GE_UtilsNew.checkRTMap){
				//vado a creare la mappa dei recordtype per poi utilizzarla
				OF_SA_GE_UtilsNew.RTMap = new  map<String,String>();
				for(recordtype rt : [select id,developername from recordtype]){
					OF_SA_GE_UtilsNew.RTMap.put(rt.developername,rt.id);
				}
				OF_SA_GE_UtilsNew.checkRTMap=true;
			} 
            OF_WS_OM_Schema_Req_ActivationNew.ActivationSetup_Req_element request_x = new OF_WS_OM_Schema_Req_ActivationNew.ActivationSetup_Req_element();
            request_x.SERVIZIO_AGGIUNTIVO = new List<OF_WS_OM_Schema_Req_ActivationNew.SERVIZIO_AGGIUNTIVO_element>();
        	request_x.APPARATO = new List<OF_WS_OM_Schema_Req_ActivationNew.APPARATO_element>();
        	request_x.VLAN = new List<OF_WS_OM_Schema_Req_ActivationNew.VLAN_element>();
             for(EOF_EAI_Service_Log__C slog : sList){  
            	if(slog.recordtypeId==OF_SA_GE_UtilsNew.rtMap.get('OF_SA_FiberRequest')){
		            request_x.CODICE_OPERATORE = slog.EOF_CODICE_OPERATORE__c; 
		            request_x.CODICE_ORDINE_OLO = slog.EOF_CODICE_ORDINE_OLO__c;
		            request_x.DATA_NOTIFICA = OF_SA_GE_UtilsNew.DateToString(slog.EOF_DATA_NOTIFICA__c);
		            request_x.ID_NOTIFICA = slog.EOF_ID_NOTIFICA__c; 
		            request_x.TIPO_COMUNICAZIONE = slog.EOF_Tipo_Comunicazione__c;
		            request_x.NOME_REFERENTE_TECNICO_OLO = slog.EOF_NOME_REFERENTE_TECNICO_OLO__c;
		            request_x.COGNOME_REFERENTE_TECNICO_OLO = slog.EOF_COGNOME_REFERENTE_TECNICO_OLO__c;
		            request_x.TELEFONO_REFERENTE_TECNICO_OLO = slog.EOF_TELEFONO_REFERENTE_TECNICO_OLO__c;
		            request_x.EMAIL_REFERENTE_TECNICO_OLO = slog.EOF_EMAIL_REFERENTE_TECNICO_OLO__c;
		            request_x.TELEFONO_REFERENTE_OLO_ONFIELD_NOTECH = slog.EOF_TELEFONO_REFERENTE_OLO_ONFIELD_NOTEC__c;
		            request_x.NOME_CLIENTE = slog.EOF_NOME_CLIENTE__c; 
		            request_x.COGNOME_CLIENTE = slog.EOF_COGNOME_CLIENTE__c;
		            request_x.RECAPITO_TELEFONICO_CLIENTE_1 = slog.EOF_RECAPITO_TELEFONICO_CLIENTE_1__c;
		            request_x.RECAPITO_TELEFONICO_CLIENTE_2 = slog.EOF_RECAPITO_TELEFONICO_CLIENTE_2__c;
		            request_x.INFORMAZIONI_LOGISTICA_APPARATI = slog.EOF_INFORMAZIONI_LOGISTICA_APPARATI__c;
		            request_x.DATA_PREVISTA_ATTIVAZIONE = OF_SA_GE_UtilsNew.DateToStringNoTime(slog.EOF_DATA_PREVISTA_ATTIVAZIONE__c);
		            if(!String.isBlank(slog.EOF_ORARIO_APPUNTAMENTO__c)){
		            	request_x.ORARIO_APPUNTAMENTO = slog.EOF_ORARIO_APPUNTAMENTO__c;
		            }
		            request_x.CODICE_PROGETTO_SPECIALE = slog.EOF_CODICE_PROGETTO_SPECIALE__c;
		            request_x.PROMOZIONE = slog.EOF_PROMOZIONE__c;
		            request_x.CLUSTER_PROMOZIONE = slog.EOF_CLUSTER_PROMOZIONE__c;
		            request_x.NOTE = slog.EOF_NOTE__c; 
		            request_x.ID_BUILDING = slog.EOF_ID_BUILDING__c;
		            request_x.SCALA_PALAZZINA = slog.EOF_SCALA_PALAZZINA__c;
		            request_x.NUMERO_TELEFONICO_PRINCIPALE_LINEA = slog.EOF_NUMERO_TELEFONICO_PRINCIPALE_LINEA__c; 
		            request_x.RECAPITO_TEST_LINEA = slog.EOF_RECAPITO_TEST_LINEA__c;
		            request_x.IDENTIFICATIVO_DEL_POP = slog.EOF_ID_POP__c;            
		            request_x.SORGENTE = slog.EOF_SORGENTE__c;
		            request_x.CODICE_ORDINE_OF = slog.EOF_CODICE_ORDINE_EOF__c;
		            request_x.SLA_DATE = slog.EOF_SLA_DATE__c;
		            request_x.GPON_ATTESTAZIONE = slog.EOF_GPON_ATTESTAZIONE__c;
		            request_x.GPON_VINCOLANTE = slog.EOF_GPON_VINCOLANTE__c;
		            request_x.ID_RISORSA = slog.EOF_ID_RISORSA__c;
		            request_x.OPZIONE_SYSTEM_UNICO = slog.EOF_OPZIONE_SYSTEM_UNICO__c;
		            request_x.CODICE_MOTIVAZIONE = slog.EOF_CODICE_MOTIVAZIONE__c;
		            request_x.MOTIVAZIONE = slog.EOF_MOTIVAZIONE__c;
		            request_x.COLLEGAMENTO_P2P = slog.EOF_COLLEGAMENTO_P2P__c;
		            request_x.TRACCIATO = slog.EOF_TRACCIATO__c;
		            request_x.ID_SERVIZIO = slog.EOF_ID_SERVIZIO__c;
		            request_x.PROFILO = slog.EOF_PROFILO__c;
		            request_x.PROVINCIA = slog.EOF_PROVINCIA__c;
		            request_x.COMUNE = slog.EOF_COMUNE__c;
		            request_x.INDIRIZZO = slog.EOF_INDIRIZZO__c; 
		            request_x.NUMERO_CIVICO = slog.EOF_NUMERO_CIVICO__c; 
		            request_x.PARTICELLA_TOPONOMASTICA = slog.EOF_PARTICELLA_TOPONOMASTICA__c;
		            //request_x.SLA_PREMIUM_ASSURANCE = slog.EOF_SLA_PREMIUM_ASSURANCE__c;
                    request_x.IDENTIFICATIVO_PRENOTAZIONE = slog.OF_SH_TOKEN_ID__c;
                   	//AA - Campo GPON_RICHIESTA Valorizzato con GPON_ATTESTAZIONE come richiesto da Carlo
					request_x.GPON_RICHIESTA = slog.EOF_GPON_ATTESTAZIONE__c;
                    //controllare se Ã¨ la stessa cosa dell'id prenotazione
                    //request_x.TOKEN_ID = slog.TOKEN_ID__c;
                    request_x.ID_WO = slog.OF_SH_ID_WO__c;
                    request_x.IMPRESA = slog.OF_SH_DELIVERYCOMPANY__c;
                    request_x.DATA_APP = slog.OF_SH_APPOINTMENTDATE__c;
                    request_x.FASCIA_APP = slog.OF_SH_FASCIA_APP__c;
                    request_x.TIPOLOGIA_SERVIZIO = slog.EOF_TIPOLOGIA_SERVIZIO__c;
					//AA 070219 - Aggiunti nuovi campi Tracciato_trascodificato e codice operatore secondario
                    request_x.TRACCIATO_TRASCODIFICATO = slog.TRACCIATO_TRASCODIFICATO__c;					
					request_x.CODICE_OPERATORE_SECONDARIO = slog.OF_Codice_Operatore_Secondario__c;
					//FINE AA 070219
                    request_x.APPUNTAMENTO_OLO =(String.isnotBlank(slog.OF_SH_TOKEN_ID__c))?'Y':'N';
            	}
        		if(sLog.recordtypeId==OF_SA_GE_UtilsNew.rtMap.get('OF_SA_Vlan')){
        			OF_WS_OM_Schema_Req_ActivationNew.VLAN_element v = new OF_WS_OM_Schema_Req_ActivationNew.VLAN_element();
	        		v.KIT_CONSEGNA_VLAN=sLog.OF_SA_KIT_CONSEGNA_VLAN__C;
		        	v.USER_VLAN=sLog.OF_SA_USER_VLAN__C;
		        	v.SERVICE_VLAN=sLog.OF_SA_SERVICE_VLAN__C;
		        	v.PROFILO_VLAN=sLog.OF_SA_PROFILO_VLAN__C;
		        	v.INFORMAZIONI_VLAN=sLog.OF_SA_INFORMAZIONI_VLAN__C;
		        	v.CUSTOMER_VLAN=sLog.OF_SA_CUSTOMER_VLAN__C;
		        	v.MODELLO_DI_SERVIZIO_VLAN=sLog.OF_SA_MODELLO_DI_SERVIZIO_VLAN__C;
	        		request_x.VLAN.add(v);  
        		}
        		if(sLog.recordtypeId==OF_SA_GE_UtilsNew.rtMap.get('OF_SA_Cpe')){
        			OF_WS_OM_Schema_Req_ActivationNew.APPARATO_element app = new OF_WS_OM_Schema_Req_ActivationNew.APPARATO_element();
	        		app.TIPOLOGIA_APPARATO=sLog.EOF_TIPOLOGIA_APPARATO__C;
		        	app.PASSWORD_APPARATO=sLog.OF_SA_PASSWORD_APPARATO__C;
		        	app.AZIONE_APPARATO=sLog.OF_SA_AZIONE_APPARATO__C;
					app.CAUSALE=slog.EOF_CAUSALE_APPARATO__c;
	        		request_x.APPARATO.add(app); 
        		}
        		if(sLog.recordtypeId==OF_SA_GE_UtilsNew.rtMap.get('OF_SA_Servizi_Aggiuntivi')){
        			OF_WS_OM_Schema_Req_ActivationNew.SERVIZIO_AGGIUNTIVO_element sae = new OF_WS_OM_Schema_Req_ActivationNew.SERVIZIO_AGGIUNTIVO_element();
	        		sae.NOME_SERVIZIO=sLog.OF_SA_NOME_SERVIZIO__c; 
	        		sae.INFORMAZIONI_SERVIZIO=sLog.OF_SA_INFORMAZIONI_SERVIZIO__c;
	        		request_x.SERVIZIO_AGGIUNTIVO.add(sae); 
        		}
            }
            OF_WS_OM_Schema_Res_ActivationNew.Esito_element response_x;
            Map<String, OF_WS_OM_Schema_Res_ActivationNew.Esito_element> response_map_x = new Map<String, OF_WS_OM_Schema_Res_ActivationNew.Esito_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/Business/Services/New_SF_OM/Resources/ActivationSetup-service3.serviceagent/PortTypeEndpoint3/ActivationSetup',
              'http://openfiber.it/schemas/New_SF_OM/ActivationSetup.xsd',
              'ActivationSetup_Req',
              'http://openfiber.it/schemas/New_SF_OM/Esito.xsd',
              'Esito',
              'OF_WS_OM_Schema_Res_ActivationNew.Esito_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
			/*}catch(Exception e){
				OF_WS_OM_Schema_Res_ActivationNew.Esito_element response_x = new OF_WS_OM_Schema_Res_ActivationNew.Esito_element();
				response_x.ESITO = '0';
				response_x.MOTIVAZIONE = 'STUBBED ACK';
				return response_x;
			}*/
        }
    }
}