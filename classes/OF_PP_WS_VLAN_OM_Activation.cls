//Generated by wsdl2apex

public class OF_PP_WS_VLAN_OM_Activation{
    
    public class AsyncActivation_PreProvisioning_OpenStreamPortTypeEndpoint0 {
        
        List<OF_Puntamento_Callout__c> listCustomSett = OF_Puntamento_Callout__c.getAll().values();
        String puntamento = listCustomSett[0].OF_OGW__c;
        public String endpoint_x = 'https://'+puntamento+'.ENEL.COM:44300/Business/Services/PreProvisioning/Resource/GW_Activation_PreProvisioning_OpenStream.serviceagent/Activation_PreProvisioning_OpenStreamPortTypeEndpoint0';
        //public String endpoint_x = 'https://alemancini83.herokuapp.com/12k596e1';
        
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://www.tibco.com/schemas/OLO_Gat_ChangeOrder/SharedResources/CommonSchema/PreProvisioning/Activation_PreProvisioning_OpenStream.xsd2', 'wwwTibcoComSchemasOloGatChangeorde_v2', 'http://xmlns.example.com/1531227217802', 'xmlnsExampleCom1531227217802_v2', 'http://www.tibco.com/schemas/OLO_Gat_ChangeOrder/SharedResources/CommonSchema/PreProvisioning/Esito.xsd3', 'wwwTibcoComSchemasOloGatChangeorde_v2'};
        public String[] temp = new String[]{};
        
        public OF_PP_WS_VLAN_OM_Response.Esito_element Activation_PreProvisioning_OpenStream(List<EOF_EAI_Service_Log__C> sList) 
        {
            OF_PP_WS_VLAN_OM_Classi.Activation_PreProvisioning_OpenStream_element request_x = new OF_PP_WS_VLAN_OM_Classi.Activation_PreProvisioning_OpenStream_element();
            OF_PP_WS_VLAN_OM_Classi.ServiziOpzionali servizi_opzionali = new OF_PP_WS_VLAN_OM_Classi.ServiziOpzionali();
            
            System.debug('****sList****:'+sList.size()+' '+sList);
            
            for(EOF_EAI_Service_Log__C slog : sList)
            {   
                System.debug('****slog****:'+slog);
                //System.debug('****slog rt id****:'+slog.recordtypeid);
                //System.debug('****slog rt name****:'+slog.recordtype.name);
                
                if(slog.recordtypeId==OF_PP_GE_Utils.rtMap.get('OF_PP_VLAN_ActivationRequest'))
                {
                    System.debug('@@@@SONO QUI@@@@');
                    
                    Case cVlan = [Select id,Codice_Ordine_SFDC__c, Codice_Ordine_SO__c, casenumber
                                  from Case
                                  where id=:slog.Caso__c];
                    
                    request_x.CODICE_OPERATORE = slog.EOF_CODICE_OPERATORE__c; 
                    request_x.CODICE_ORDINE_SO = cVlan.Codice_Ordine_SO__c; //Num Log Vlan Figlio
                    request_x.CODICE_ORDINE_SFDC = cVlan.Codice_Ordine_SFDC__c; //Num Log Richiesta Padre
                    request_x.PROGRESSIVO_ORDINE = String.valueOf(slog.PO_PP_Progressivo_Ordine__c);
                    request_x.DATA_NOTIFICA = OF_PP_GE_Utils.dateToString(slog.EOF_DATA_NOTIFICA__c);
                    request_x.ID_NOTIFICA = slog.EOF_ID_NOTIFICA__c;
                    request_x.SERVIZIO_COMMERCIALE = slog.traffico__c; 
                    request_x.POP_RACCOLTA = slog.PO_PP_POP_raccolta__c; 
                    request_x.POP_CONSEGNA = slog.POP__c; 
                    request_x.NOME_KIT = slog.Nome_del_KIT__c;
                    request_x.INTERFACCIA = slog.Banda_Interfaccia__c; 
                    request_x.BANDA = slog.PO_PP_Interfaccia__c; 
                    request_x.MODELLO_SERVIZIO = slog.PO_PP_cos_type__c; //è il COS TYPE
                    request_x.USER_VLAN = slog.PO_PP_User_VLAN__c;
                    
                    OF_PP_WS_VLAN_OM_Classi.ServiziOpzionali_element serv_opz = new OF_PP_WS_VLAN_OM_Classi.ServiziOpzionali_element();
                    
                    if((String.isBlank(sLog.PO_PP_cos_remarking__c)) || (sLog.PO_PP_cos_remarking__c!=null))
                    {
                        serv_opz.COS_REMARKING = sLog.PO_PP_cos_remarking__c; 
                    }
                    if((String.isBlank(sLog.PO_PP_dhcp_Option82__c)) || (sLog.PO_PP_dhcp_Option82__c!=null))
                    {
                        serv_opz.DHCP_OPTION82 = sLog.PO_PP_dhcp_Option82__c;
                    }
                    if((String.isBlank(sLog.SVLAN__c)) || (sLog.SVLAN__c!=null))
                    {
                        serv_opz.SVLAN_TRANSLATION = sLog.SVLAN__c;
                    }
                    serv_opz.SVLAN_ID_NSO = '';
                    servizi_opzionali.item = serv_opz;
                    
                    request_x.SERVIZI_OPZIONALI = servizi_opzionali;
                }
                else if(slog.recordtypeId==OF_PP_GE_Utils.rtMap.get('OF_PP_COS'))
                {   
                    temp.add('COS'+slog.PO_PP_cos_class__c);
                    System.debug('***temp***:'+temp);
                }
            }
            request_x.SERVIZI_UTENTE = temp; //SERVIZI_UTENTE è il COS CLASS
            
            //Campi della request
            System.debug('+++++request_x.CODICE_OPERATORE++++ : '+request_x.CODICE_OPERATORE);
            System.debug('+++++request_x.CODICE_ORDINE_SFDC++++ : '+request_x.CODICE_ORDINE_SFDC);
            System.debug('+++++request_x.CODICE_ORDINE_SO++++ : '+request_x.CODICE_ORDINE_SO);
            System.debug('+++++request_x.PROGRESSIVO_ORDINE++++ : '+request_x.PROGRESSIVO_ORDINE);
            System.debug('+++++request_x.DATA_NOTIFICA++++ : '+request_x.DATA_NOTIFICA);
            System.debug('+++++request_x.ID_NOTIFICA++++ : '+request_x.ID_NOTIFICA);
            System.debug('+++++request_x.POP_RACCOLTA++++ : '+request_x.POP_RACCOLTA);
            System.debug('+++++request_x.POP_CONSEGNA++++ : '+request_x.POP_CONSEGNA);
            System.debug('+++++request_x.NOME_KIT++++ : '+request_x.NOME_KIT);
            System.debug('+++++request_x.MODELLO_SERVIZIO++++ : '+request_x.MODELLO_SERVIZIO);
            System.debug('+++++request_x.USER_VLAN++++ : '+request_x.USER_VLAN);
            System.debug('+++++request_x.SERVIZI_UTENTE++++ : '+request_x.SERVIZI_UTENTE);
            System.debug('+++++request_x.SERVIZI_OPZIONALI++++ : '+request_x.SERVIZI_OPZIONALI);
            
            OF_PP_WS_VLAN_OM_Response.Esito_element response_x; 
            Map<String, OF_PP_WS_VLAN_OM_Response.Esito_element> response_map_x = new Map<String, OF_PP_WS_VLAN_OM_Response.Esito_element>();
            response_map_x.put('response_x', response_x);
            
            System.debug('*****Prima della WebServiceCallout******');

            System.debug('####Request_X:'+request_x);
            
            WebServiceCallout.invoke(
              this,
              request_x, 
              response_map_x,
              new String[]{endpoint_x,
                '/Business/Services/PreProvisioning/Resource/GW_Activation_PreProvisioning_OpenStream-service0.serviceagent/Activation_PreProvisioning_OpenStreamPortTypeEndpoint0/Activation_PreProvisioning_OpenStream',
                'http://www.tibco.com/schemas/OLO_Gat_ChangeOrder/SharedResources/CommonSchema/PreProvisioning/Activation_PreProvisioning_OpenStream.xsd2',
                'Activation_PreProvisioning_OpenStream',
                'http://www.tibco.com/schemas/OLO_Gat_ChangeOrder/SharedResources/CommonSchema/PreProvisioning/Esito.xsd3',
                'Esito',
                'OF_PP_WS_VLAN_OM_Response.Esito_element'}
              );
            
            response_x = response_map_x.get('response_x');
            OF_PP_GE_Utils.slSFOM.EOF_Richiesta_Notifica__c = OF_PP_GE_Utils.copy_request(request_x);
            
            if(OF_PP_GE_Utils.testNackTecnicoOM){
                OF_PP_WS_VLAN_OM_Response.Esito_element resp = (OF_PP_WS_VLAN_OM_Response.Esito_element) OF_PP_GE_Utils.simulateNACK('OLO');
                System.debug('****RESP****:' +resp);
                return resp;
            }
            System.debug('@@@@_Response_x@@@@ '+response_x);
            return response_x;
        }
    }
}