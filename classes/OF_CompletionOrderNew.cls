//Generated by wsdl2apex

public class OF_CompletionOrderNew {
    public class CompletionOrderEndpoint { 
        //public String endpoint_x = 'http://localhost:6990/OF_CompletionOrder_OpenStream_attivi';
        List<OF_Puntamento_Callout__c> listCustomSett =  OF_Puntamento_Callout__c.getAll().values();
        //Tibco_Puntamento_SH__c
    	String puntamento=listCustomSett[0].Tibco_Collaudo__c;
        public String endpoint_x = 'https://'+puntamento+'/OF_CompletionOrder_OpenStream_attivi';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x; 
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://www.openfiber.it/schema/OF_CompletionOrder_OpenStream_attivi', 'OF_Schema_CompletionOrderNew', 'http://www.openfiber.it/wsdl/concr/CompletionOrder', 'OF_CompletionOrderNew'};
        //public OF_Schema_CompletionOrderNew.CompletionOrderResponseType CompletionOrderNotify(String CODICE_OPERATORE,String CODICE_ORDINE_OLO,String CODICE_ORDINE_OF,DateTime DATA_NOTIFICA,String ID_NOTIFICA,String STATO_ORDINE,String CODICE_MOTIVAZIONE,String MOTIVAZIONE,String ID_RISORSA,Date DATA_ESPLETAMENTO_ORDINE,String PARAMETRI_TRASMISSIVI_OTTICI,String DDT,String NOTE,OF_Schema_CompletionOrderNew.ServizioAggiuntivoType[] SERVIZIO_AGGIUNTIVO,OF_Schema_CompletionOrderNew.ApparatoType[] APPARATO) {
        public OF_Schema_CompletionOrderNew.CompletionOrderResponseType CompletionOrderNotify(List<EOF_EAI_Service_Log__c> sList) {
            /*//AA RIMOSSO mock per ACK
            try{*/
                OF_Schema_CompletionOrderNew.CompletionOrderNotifyType request_x = new OF_Schema_CompletionOrderNew.CompletionOrderNotifyType();
                for(EOF_EAI_Service_Log__c sl : sList){  
                    if(sl.EOF_Tipo_Comunicazione_String__c == 'SF-OLO - CompletionOrder'){
                        request_x.CODICE_OPERATORE = sl.EOF_CODICE_OPERATORE__C; 
                        request_x.CODICE_ORDINE_OLO = sl.EOF_CODICE_ORDINE_OLO__C;
                        request_x.CODICE_ORDINE_OF = sl.EOF_CODICE_ORDINE_EOF__C; 
                        request_x.DATA_NOTIFICA = OF_SA_GE_UtilsNew.DateToString(sl.EOF_DATA_NOTIFICA__C);
                        request_x.ID_NOTIFICA = sl.EOF_ID_NOTIFICA__C;
                        request_x.STATO_ORDINE = sl.EOF_STATO_ORDINE__C;
                        request_x.CODICE_MOTIVAZIONE = sl.EOF_CODICE_MOTIVAZIONE__C;
                        request_x.MOTIVAZIONE = sl.EOF_MOTIVAZIONE__C;
                        request_x.ID_RISORSA = sl.EOF_ID_RISORSA__C;
                        if(sl.EOF_DATA_ESPLETAMENTO_ORDINE__C != null){
                            request_x.DATA_ESPLETAMENTO_ORDINE = OF_SA_GE_UtilsNew.DateToStringNoTime(sl.EOF_DATA_ESPLETAMENTO_ORDINE__C);
                        }
                        request_x.PARAMETRI_TRASMISSIVI_OTTICI = sl.EOF_Parametri_Trasmissivi_Ottici__c;
                        request_x.SCALA_PALAZZINA = sl.EOF_SCALA_PALAZZINA__C;
                        request_x.DDT = sl.OF_SA_DDT__C;
                        request_x.NOTE = sl.EOF_NOTE__C;
                    }
                } 
                if(sList.size()>1){
                    request_x.SERVIZIO_AGGIUNTIVO = new List<OF_Schema_CompletionOrderNew.ServizioAggiuntivoType>();
                    request_x.APPARATO = new List<OF_Schema_CompletionOrderNew.ApparatoType>();

                    for(EOF_EAI_Service_Log__C sLog : sList){
                        
                        if(sLog.EOF_Tipo_COmunicazione_String__c=='CPE'){ //controllare se lo passiamo, in caso
                            OF_Schema_CompletionOrderNew.ApparatoType app = new OF_Schema_CompletionOrderNew.ApparatoType();
                            app.TIPOLOGIA_APPARATO=sLog.EOF_TIPOLOGIA_APPARATO__C;
                            app.ESITO_CONSEGNA_APPARATO=sLog.EOF_ESITO_CONSEGNA_APPARATO__c;
                            app.ID_APPARATO_CONSEGNATO=sLog.OF_SA_ID_APPARATO_CONSEGNATO__c;
                            app.CODICE_MOTIVAZIONE_CONSEGNA=sLog.OF_SA_CODICE_MOTIVAZIONE_CONSEGNA__c;
                            app.MOTIVAZIONE_CONSEGNA=sLog.OF_SA_MOTIVAZIONE_CONSEGNA__c;
                            request_x.APPARATO.add(app); 
                        }
                        
                        if(sLog.EOF_Tipo_COmunicazione_String__c=='SERVIZIO AGGIUNTIVO'){
                            OF_Schema_CompletionOrderNew.ServizioAggiuntivoType sa = new OF_Schema_CompletionOrderNew.ServizioAggiuntivoType();
                            sa.NOME_SERVIZIO=sLog.OF_SA_NOME_SERVIZIO__c; 
                            sa.ESITO_SERVIZIO=sLog.OF_SA_ESITO_SERVIZIO__c;
                            sa.CODICE_MOTIVAZIONE_SERVIZIO=sLog.OF_SA_CODICE_MOTIVAZIONE_SERVIZIO__c; 
                            sa.MOTIVAZIONE_SERVIZIO=sLog.OF_SA_MOTIVAZIONE_SERVIZIO__c;
                            request_x.SERVIZIO_AGGIUNTIVO.add(sa); 
                        } 
                        
                    } 
                }

                OF_Schema_CompletionOrderNew.CompletionOrderResponseType response_x;
                Map<String, OF_Schema_CompletionOrderNew.CompletionOrderResponseType> response_map_x = new Map<String, OF_Schema_CompletionOrderNew.CompletionOrderResponseType>();
                response_map_x.put('response_x', response_x);
                WebServiceCallout.invoke(
                this,
                request_x,
                response_map_x,
                new String[]{endpoint_x,
                'OF_CompletionOrder_OpenStream_attivi/CompletionOrderEndpoint/CompletionOrderNotify',
                'http://www.openfiber.it/schema/OF_CompletionOrder_OpenStream_attivi',
                'completionOrderNotify',
                'http://www.openfiber.it/schema/OF_CompletionOrder_OpenStream_attivi',
                'completionOrderResponse',
                'OF_Schema_CompletionOrderNew.CompletionOrderResponseType'}
                ); 
                response_x = response_map_x.get('response_x');
                return response_x;
            /*}catch(Exception e){
                OF_Schema_CompletionOrderNew.CompletionOrderResponseType response_x = new OF_Schema_CompletionOrderNew.CompletionOrderResponseType();
                    response_x.ESITO = '0';
                    response_x.MOTIVAZIONE = 'ACK FINTO!!';
                return response_x;
            }*/
        }
    }
}