//Generated by wsdl2apex

public class OF_TTM_ForwardRequest {
    public class SyncPortTypeEndpoint1 {
        //public String endpoint_x = 'http://localhost:2110/InoltroSF2TTM';
        List<OF_Puntamento_Callout__c> listCustomSett =  OF_Puntamento_Callout__c.getAll().values();
        String puntamento=listCustomSett[0].OF_OGW__c;
        public String endpoint_x = 'https://'+puntamento+'.ENEL.COM:44300/InoltroSF2TTM';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://xmlns.example.com/1523525929587', 'OF_TTM_ForwardRequest', 'http://xmlns.enel.it/OLO_Gateway/Sicronizzazione/Notifica.xsd', 'OF_TTM_ForwardRequest_Element'};
        //public OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element ForwardTroubleTicket_TTM(String ID_REQ_FORWARD2TTM,OF_TTM_ForwardRequest_Element.REQ_FORWARD2TTM_element REQ_FORWARD2TTM) {
        public OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element ForwardTroubleTicket_TTM(EOF_EAI_Service_Log__c sLog) {
                /*if(sLog.EOF_Tipo_Comunicazione__c.equalsIgnoreCase('9') || sLog.EOF_Tipo_Comunicazione__c.equalsIgnoreCase('1')){
                    //Fingo l'ack da TTM, causa loro problemi 
                    OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element Fakeres = new OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element();
                    Fakeres.esito = '0';
                    return Fakeres;
                }*/
            /*try{
                if(!sLog.EOF_Tipo_Comunicazione__c.equalsIgnoreCase('1')){
                    //Fingo l'ack da TTM, causa loro problemi
                    OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element Fakeres = new OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element();
                    Fakeres.esito = '1';
                    Fakeres.codice_motivazione = 'A_K8';
                    Fakeres.motivazione = 'FAKE RESP NACK TECNICO';
                    return Fakeres;
                }
                if(sLog.EOF_Tipo_Comunicazione__c.equalsIgnoreCase('1')){
                    //Fingo l'ack da TTM, causa loro problemi 
                    OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element Fakeres = new OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element();
                    Fakeres.esito = '0';
                    return Fakeres;
                }else{*/
            OF_TTM_ForwardRequest_Element.Forward2TTM_Req_element request_x = new OF_TTM_ForwardRequest_Element.Forward2TTM_Req_element();
            //request_x.ID_REQ_FORWARD2TTM = ID_REQ_FORWARD2TTM;
            //request_x.REQ_FORWARD2TTM = REQ_FORWARD2TTM;   
            OF_TTM_ForwardRequest_Element.REQ_FORWARD2TTM_element request = new OF_TTM_ForwardRequest_Element.REQ_FORWARD2TTM_element();
                request.tipo_comunicazione = sLog.EOF_Tipo_Comunicazione__c;
                request.codice_operatore = sLog.EOF_Codice_Operatore__c;
                request.codice_comunicazione_olo = sLog.EOF_Codice_Comunicazione_OLO__c;
                request.categoria_guasto = sLog.EOF_Categoria_Guasto__c;
                request.id_notifica = sLog.EOF_ID_Notifica__c;
                request.id_risorsa = sLog.EOF_ID_Risorsa__c;
                request.data_ora_inizio_guasto = OF_TTM_Utils.DateToString(sLog.EOF_Data_Ora_Inizio_Guasto__c);
                request.data_ora_richiesta_annullamento = OF_TTM_Utils.DateToString(sLog.EOF_Data_Ora_Richiesta_Annullamento__c);
                request.data_ora_desospensione = OF_TTM_Utils.DateToString(sLog.EOF_Data_Ora_Desospensione__c);
                request.data_ora_autoripristinato = OF_TTM_Utils.DateToString(sLog.EOF_Data_Ora_Autoripristinato__c);
                request.causale_richiesta_annullamento = sLog.EOF_CAUSALE_RICHIESTA_ANNULLAMENTO__c;
                request.causale_desospensione = sLog.EOF_Causale_Desospensione__c;
                request.data_ora_inizio_sla = OF_TTM_Utils.DateToString(sLog.OF_TT_DATA_ORA_INIZIO_SLA__c);
                request.data_ora_notifica_olo = OF_TTM_Utils.DateToString(sLog.EOF_Data_Notifica__c);
                request.data_provisioning_servizio = OF_TTM_Utils.DateToString(sLog.EOF_Data_Provisioning_Servizio__c);
                request.nome_cliente = sLog.EOF_Nome_Cliente__c;
                request.cognome_cliente = sLog.EOF_COgnome_CLiente__c;
                request.recapito_telefonico_cliente_1 = sLog.EOF_RECAPITO_TELEFONICO_CLIENTE_1__c;
                request.recapito_telefonico_cliente_2 = sLog.EOF_RECAPITO_TELEFONICO_CLIENTE_2__c;
                request.nome_referente_tecnico_olo = sLog.EOF_NOME_REFERENTE_TECNICO_OLO__c;
                request.telefono_referente_tecnico_olo = sLog.EOF_TELEFONO_REFERENTE_TECNICO_OLO__c;
                request.email_referente_tecnico_olo = sLog.EOF_EMAIL_REFERENTE_TECNICO_OLO__c;
                request.note_cliente = sLog.EOF_NOTE_CLIENTE__c;
                request.note = sLog.EOF_Note__c;
                request.verifica_apparato = sLog.EOF_Verifica_apparato_cliente__c;
                request.descrizione_problema = sLog.EOF_Descrizione_Problema__c;
                request.causale_apertura = sLog.EOF_Causale_Apertura__c;
                request.intervento_congiunto = sLog.EOF_Intervento_Congiunto__c;
                request.tec_olo = sLog.EOF_Tec_OLO__c;
                request.tel_tec_olo = sLog.EOF_Tel_Tec_OLO__c;
                request.data_ora_intervento_congiunto = OF_TTM_Utils.DateToString(sLog.EOF_Data_Ora_Intervento_Congiunto__c);
                request.service_type = sLog.EOF_TIPOLOGIA_SERVIZIO__c;
                request.sla_type = sLog.EOF_SLA_PREMIUM_ASSURANCE__c;
                request.orderid = sLog.EOF_ID_SERVIZIO__c;
            //POPOLO I CAMPI DELLA REQUEST
            request_x.ID_REQ_FORWARD2TTM = sLog.EOF_Codice_Ordine_EOF__c;
            request_x.REQ_FORWARD2TTM = request;

            OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element response_x;
            Map<String, OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element> response_map_x = new Map<String, OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
                this,
                request_x,
                response_map_x,
                new String[]{endpoint_x,
                    '/Business/Services/TTM/ForwardRequestTTM.serviceagent/SyncPortTypeEndpoint1/ForwardTroubleTicket_TTM',
                    'http://xmlns.enel.it/OLO_Gateway/Sicronizzazione/Notifica.xsd',
                    'Forward2TTM_Req',
                    'http://xmlns.enel.it/OLO_Gateway/Sicronizzazione/Notifica.xsd',
                    'TroubleTicketFwdResp',
                    'OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
                /*}
            }catch(Exception e){
                //Fingo l'ack da TTM, causa loro problemi
                OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element Fakeres = new OF_TTM_ForwardRequest_Element.TroubleTicketFwdResp_element();
                Fakeres.esito = '0';
                return Fakeres;
            }*/
        }
    }
}